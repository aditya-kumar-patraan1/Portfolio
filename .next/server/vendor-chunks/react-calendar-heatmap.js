"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-calendar-heatmap";
exports.ids = ["vendor-chunks/react-calendar-heatmap"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-calendar-heatmap/dist/react-calendar-heatmap.esm.js":
/*!********************************************************************************!*\
  !*** ./node_modules/react-calendar-heatmap/dist/react-calendar-heatmap.esm.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nvar ReactPropTypesSecret_1 = ReactPropTypesSecret;\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nvar factoryWithThrowingShims = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret_1) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  }  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  }  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\nvar propTypes = createCommonjsModule(function (module) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n{\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = factoryWithThrowingShims();\n}\n});\n\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (newInputs[i] !== lastInputs[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nvar MILLISECONDS_IN_ONE_DAY = 24 * 60 * 60 * 1000;\nvar DAYS_IN_WEEK = 7;\nvar MONTH_LABELS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nvar DAY_LABELS = ['', 'Mon', '', 'Wed', '', 'Fri', ''];\n\n// returns a new date shifted a certain number of days (can be negative)\nfunction shiftDate(date, numDays) {\n  var newDate = new Date(date);\n  newDate.setDate(newDate.getDate() + numDays);\n  return newDate;\n}\nfunction getBeginningTimeForDate(date) {\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n} // obj can be a parseable string, a millisecond timestamp, or a Date object\n\nfunction convertToDate(obj) {\n  return obj instanceof Date ? obj : new Date(obj);\n}\nfunction dateNDaysAgo(numDaysAgo) {\n  return shiftDate(new Date(), -numDaysAgo);\n}\nfunction getRange(count) {\n  var arr = [];\n\n  for (var idx = 0; idx < count; idx += 1) {\n    arr.push(idx);\n  }\n\n  return arr;\n}\n\nvar SQUARE_SIZE = 10;\nvar MONTH_LABEL_GUTTER_SIZE = 4;\nvar CSS_PSEDUO_NAMESPACE = 'react-calendar-heatmap-';\n\nvar CalendarHeatmap =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CalendarHeatmap, _React$Component);\n\n  function CalendarHeatmap() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CalendarHeatmap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CalendarHeatmap)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"getValueCache\", memoizeOne(function (props) {\n      return props.values.reduce(function (memo, value) {\n        var date = convertToDate(value.date);\n        var index = Math.floor((date - _this.getStartDateWithEmptyDays()) / MILLISECONDS_IN_ONE_DAY); // eslint-disable-next-line no-param-reassign\n\n        memo[index] = {\n          value: value,\n          className: _this.props.classForValue(value),\n          title: _this.props.titleForValue ? _this.props.titleForValue(value) : null,\n          tooltipDataAttrs: _this.getTooltipDataAttrsForValue(value)\n        };\n        return memo;\n      }, {});\n    }));\n\n    return _this;\n  }\n\n  _createClass(CalendarHeatmap, [{\n    key: \"getDateDifferenceInDays\",\n    value: function getDateDifferenceInDays() {\n      var _this$props = this.props,\n          startDate = _this$props.startDate,\n          numDays = _this$props.numDays;\n\n      if (numDays) {\n        // eslint-disable-next-line no-console\n        console.warn('numDays is a deprecated prop. It will be removed in the next release. Consider using the startDate prop instead.');\n        return numDays;\n      }\n\n      var timeDiff = this.getEndDate() - convertToDate(startDate);\n      return Math.ceil(timeDiff / MILLISECONDS_IN_ONE_DAY);\n    }\n  }, {\n    key: \"getSquareSizeWithGutter\",\n    value: function getSquareSizeWithGutter() {\n      return SQUARE_SIZE + this.props.gutterSize;\n    }\n  }, {\n    key: \"getMonthLabelSize\",\n    value: function getMonthLabelSize() {\n      if (!this.props.showMonthLabels) {\n        return 0;\n      }\n\n      if (this.props.horizontal) {\n        return SQUARE_SIZE + MONTH_LABEL_GUTTER_SIZE;\n      }\n\n      return 2 * (SQUARE_SIZE + MONTH_LABEL_GUTTER_SIZE);\n    }\n  }, {\n    key: \"getWeekdayLabelSize\",\n    value: function getWeekdayLabelSize() {\n      if (!this.props.showWeekdayLabels) {\n        return 0;\n      }\n\n      if (this.props.horizontal) {\n        return 30;\n      }\n\n      return SQUARE_SIZE * 1.5;\n    }\n  }, {\n    key: \"getStartDate\",\n    value: function getStartDate() {\n      return shiftDate(this.getEndDate(), -this.getDateDifferenceInDays() + 1); // +1 because endDate is inclusive\n    }\n  }, {\n    key: \"getEndDate\",\n    value: function getEndDate() {\n      return getBeginningTimeForDate(convertToDate(this.props.endDate));\n    }\n  }, {\n    key: \"getStartDateWithEmptyDays\",\n    value: function getStartDateWithEmptyDays() {\n      return shiftDate(this.getStartDate(), -this.getNumEmptyDaysAtStart());\n    }\n  }, {\n    key: \"getNumEmptyDaysAtStart\",\n    value: function getNumEmptyDaysAtStart() {\n      return this.getStartDate().getDay();\n    }\n  }, {\n    key: \"getNumEmptyDaysAtEnd\",\n    value: function getNumEmptyDaysAtEnd() {\n      return DAYS_IN_WEEK - 1 - this.getEndDate().getDay();\n    }\n  }, {\n    key: \"getWeekCount\",\n    value: function getWeekCount() {\n      var numDaysRoundedToWeek = this.getDateDifferenceInDays() + this.getNumEmptyDaysAtStart() + this.getNumEmptyDaysAtEnd();\n      return Math.ceil(numDaysRoundedToWeek / DAYS_IN_WEEK);\n    }\n  }, {\n    key: \"getWeekWidth\",\n    value: function getWeekWidth() {\n      return DAYS_IN_WEEK * this.getSquareSizeWithGutter();\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      return this.getWeekCount() * this.getSquareSizeWithGutter() - (this.props.gutterSize - this.getWeekdayLabelSize());\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      return this.getWeekWidth() + (this.getMonthLabelSize() - this.props.gutterSize) + this.getWeekdayLabelSize();\n    }\n  }, {\n    key: \"getValueForIndex\",\n    value: function getValueForIndex(index) {\n      if (this.valueCache[index]) {\n        return this.valueCache[index].value;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getClassNameForIndex\",\n    value: function getClassNameForIndex(index) {\n      if (this.valueCache[index]) {\n        return this.valueCache[index].className;\n      }\n\n      return this.props.classForValue(null);\n    }\n  }, {\n    key: \"getTitleForIndex\",\n    value: function getTitleForIndex(index) {\n      if (this.valueCache[index]) {\n        return this.valueCache[index].title;\n      }\n\n      return this.props.titleForValue ? this.props.titleForValue(null) : null;\n    }\n  }, {\n    key: \"getTooltipDataAttrsForIndex\",\n    value: function getTooltipDataAttrsForIndex(index) {\n      if (this.valueCache[index]) {\n        return this.valueCache[index].tooltipDataAttrs;\n      }\n\n      return this.getTooltipDataAttrsForValue({\n        date: null,\n        count: null\n      });\n    }\n  }, {\n    key: \"getTooltipDataAttrsForValue\",\n    value: function getTooltipDataAttrsForValue(value) {\n      var tooltipDataAttrs = this.props.tooltipDataAttrs;\n\n      if (typeof tooltipDataAttrs === 'function') {\n        return tooltipDataAttrs(value);\n      }\n\n      return tooltipDataAttrs;\n    }\n  }, {\n    key: \"getTransformForWeek\",\n    value: function getTransformForWeek(weekIndex) {\n      if (this.props.horizontal) {\n        return \"translate(\".concat(weekIndex * this.getSquareSizeWithGutter(), \", 0)\");\n      }\n\n      return \"translate(0, \".concat(weekIndex * this.getSquareSizeWithGutter(), \")\");\n    }\n  }, {\n    key: \"getTransformForWeekdayLabels\",\n    value: function getTransformForWeekdayLabels() {\n      if (this.props.horizontal) {\n        return \"translate(\".concat(SQUARE_SIZE, \", \").concat(this.getMonthLabelSize(), \")\");\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getTransformForMonthLabels\",\n    value: function getTransformForMonthLabels() {\n      if (this.props.horizontal) {\n        return \"translate(\".concat(this.getWeekdayLabelSize(), \", 0)\");\n      }\n\n      return \"translate(\".concat(this.getWeekWidth() + MONTH_LABEL_GUTTER_SIZE, \", \").concat(this.getWeekdayLabelSize(), \")\");\n    }\n  }, {\n    key: \"getTransformForAllWeeks\",\n    value: function getTransformForAllWeeks() {\n      if (this.props.horizontal) {\n        return \"translate(\".concat(this.getWeekdayLabelSize(), \", \").concat(this.getMonthLabelSize(), \")\");\n      }\n\n      return \"translate(0, \".concat(this.getWeekdayLabelSize(), \")\");\n    }\n  }, {\n    key: \"getViewBox\",\n    value: function getViewBox() {\n      if (this.props.horizontal) {\n        return \"0 0 \".concat(this.getWidth(), \" \").concat(this.getHeight());\n      }\n\n      return \"0 0 \".concat(this.getHeight(), \" \").concat(this.getWidth());\n    }\n  }, {\n    key: \"getSquareCoordinates\",\n    value: function getSquareCoordinates(dayIndex) {\n      if (this.props.horizontal) {\n        return [0, dayIndex * this.getSquareSizeWithGutter()];\n      }\n\n      return [dayIndex * this.getSquareSizeWithGutter(), 0];\n    }\n  }, {\n    key: \"getWeekdayLabelCoordinates\",\n    value: function getWeekdayLabelCoordinates(dayIndex) {\n      if (this.props.horizontal) {\n        return [0, (dayIndex + 1) * SQUARE_SIZE + dayIndex * this.props.gutterSize];\n      }\n\n      return [dayIndex * SQUARE_SIZE + dayIndex * this.props.gutterSize, SQUARE_SIZE];\n    }\n  }, {\n    key: \"getMonthLabelCoordinates\",\n    value: function getMonthLabelCoordinates(weekIndex) {\n      if (this.props.horizontal) {\n        return [weekIndex * this.getSquareSizeWithGutter(), this.getMonthLabelSize() - MONTH_LABEL_GUTTER_SIZE];\n      }\n\n      var verticalOffset = -2;\n      return [0, (weekIndex + 1) * this.getSquareSizeWithGutter() + verticalOffset];\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(value) {\n      if (this.props.onClick) {\n        this.props.onClick(value);\n      }\n    }\n  }, {\n    key: \"handleMouseOver\",\n    value: function handleMouseOver(e, value) {\n      if (this.props.onMouseOver) {\n        this.props.onMouseOver(e, value);\n      }\n    }\n  }, {\n    key: \"handleMouseLeave\",\n    value: function handleMouseLeave(e, value) {\n      if (this.props.onMouseLeave) {\n        this.props.onMouseLeave(e, value);\n      }\n    }\n  }, {\n    key: \"renderSquare\",\n    value: function renderSquare(dayIndex, index) {\n      var _this2 = this;\n\n      var indexOutOfRange = index < this.getNumEmptyDaysAtStart() || index >= this.getNumEmptyDaysAtStart() + this.getDateDifferenceInDays();\n\n      if (indexOutOfRange && !this.props.showOutOfRangeDays) {\n        return null;\n      }\n\n      var _this$getSquareCoordi = this.getSquareCoordinates(dayIndex),\n          _this$getSquareCoordi2 = _slicedToArray(_this$getSquareCoordi, 2),\n          x = _this$getSquareCoordi2[0],\n          y = _this$getSquareCoordi2[1];\n\n      var value = this.getValueForIndex(index);\n      var rect = // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n      react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"rect\", _extends({\n        key: index,\n        width: SQUARE_SIZE,\n        height: SQUARE_SIZE,\n        x: x,\n        y: y,\n        className: this.getClassNameForIndex(index),\n        onClick: function onClick() {\n          return _this2.handleClick(value);\n        },\n        onMouseOver: function onMouseOver(e) {\n          return _this2.handleMouseOver(e, value);\n        },\n        onMouseLeave: function onMouseLeave(e) {\n          return _this2.handleMouseLeave(e, value);\n        }\n      }, this.getTooltipDataAttrsForIndex(index)), react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"title\", null, this.getTitleForIndex(index)));\n      var transformDayElement = this.props.transformDayElement;\n      return transformDayElement ? transformDayElement(rect, value, index) : rect;\n    }\n  }, {\n    key: \"renderWeek\",\n    value: function renderWeek(weekIndex) {\n      var _this3 = this;\n\n      return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"g\", {\n        key: weekIndex,\n        transform: this.getTransformForWeek(weekIndex),\n        className: \"\".concat(CSS_PSEDUO_NAMESPACE, \"week\")\n      }, getRange(DAYS_IN_WEEK).map(function (dayIndex) {\n        return _this3.renderSquare(dayIndex, weekIndex * DAYS_IN_WEEK + dayIndex);\n      }));\n    }\n  }, {\n    key: \"renderAllWeeks\",\n    value: function renderAllWeeks() {\n      var _this4 = this;\n\n      return getRange(this.getWeekCount()).map(function (weekIndex) {\n        return _this4.renderWeek(weekIndex);\n      });\n    }\n  }, {\n    key: \"renderMonthLabels\",\n    value: function renderMonthLabels() {\n      var _this5 = this;\n\n      if (!this.props.showMonthLabels) {\n        return null;\n      }\n\n      var weekRange = getRange(this.getWeekCount() - 1); // don't render for last week, because label will be cut off\n\n      return weekRange.map(function (weekIndex) {\n        var endOfWeek = shiftDate(_this5.getStartDateWithEmptyDays(), (weekIndex + 1) * DAYS_IN_WEEK);\n\n        var _this5$getMonthLabelC = _this5.getMonthLabelCoordinates(weekIndex),\n            _this5$getMonthLabelC2 = _slicedToArray(_this5$getMonthLabelC, 2),\n            x = _this5$getMonthLabelC2[0],\n            y = _this5$getMonthLabelC2[1];\n\n        return endOfWeek.getDate() >= 1 && endOfWeek.getDate() <= DAYS_IN_WEEK ? react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"text\", {\n          key: weekIndex,\n          x: x,\n          y: y,\n          className: \"\".concat(CSS_PSEDUO_NAMESPACE, \"month-label\")\n        }, _this5.props.monthLabels[endOfWeek.getMonth()]) : null;\n      });\n    }\n  }, {\n    key: \"renderWeekdayLabels\",\n    value: function renderWeekdayLabels() {\n      var _this6 = this;\n\n      if (!this.props.showWeekdayLabels) {\n        return null;\n      }\n\n      return this.props.weekdayLabels.map(function (weekdayLabel, dayIndex) {\n        var _this6$getWeekdayLabe = _this6.getWeekdayLabelCoordinates(dayIndex),\n            _this6$getWeekdayLabe2 = _slicedToArray(_this6$getWeekdayLabe, 2),\n            x = _this6$getWeekdayLabe2[0],\n            y = _this6$getWeekdayLabe2[1];\n\n        var cssClasses = \"\".concat(_this6.props.horizontal ? '' : \"\".concat(CSS_PSEDUO_NAMESPACE, \"small-text\"), \" \").concat(CSS_PSEDUO_NAMESPACE, \"weekday-label\"); // eslint-disable-next-line no-bitwise\n\n        return dayIndex & 1 ? react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"text\", {\n          key: \"\".concat(x).concat(y),\n          x: x,\n          y: y,\n          className: cssClasses\n        }, weekdayLabel) : null;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.valueCache = this.getValueCache(this.props);\n      return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n        className: \"react-calendar-heatmap\",\n        viewBox: this.getViewBox()\n      }, react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"g\", {\n        transform: this.getTransformForMonthLabels(),\n        className: \"\".concat(CSS_PSEDUO_NAMESPACE, \"month-labels\")\n      }, this.renderMonthLabels()), react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"g\", {\n        transform: this.getTransformForAllWeeks(),\n        className: \"\".concat(CSS_PSEDUO_NAMESPACE, \"all-weeks\")\n      }, this.renderAllWeeks()), react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"g\", {\n        transform: this.getTransformForWeekdayLabels(),\n        className: \"\".concat(CSS_PSEDUO_NAMESPACE, \"weekday-labels\")\n      }, this.renderWeekdayLabels()));\n    }\n  }]);\n\n  return CalendarHeatmap;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));\n\nCalendarHeatmap.propTypes = {\n  values: propTypes.arrayOf(propTypes.shape({\n    date: propTypes.oneOfType([propTypes.string, propTypes.number, propTypes.instanceOf(Date)]).isRequired\n  }).isRequired).isRequired,\n  // array of objects with date and arbitrary metadata\n  numDays: propTypes.number,\n  // number of days back from endDate to show\n  startDate: propTypes.oneOfType([propTypes.string, propTypes.number, propTypes.instanceOf(Date)]),\n  // start of date range\n  endDate: propTypes.oneOfType([propTypes.string, propTypes.number, propTypes.instanceOf(Date)]),\n  // end of date range\n  gutterSize: propTypes.number,\n  // size of space between squares\n  horizontal: propTypes.bool,\n  // whether to orient horizontally or vertically\n  showMonthLabels: propTypes.bool,\n  // whether to show month labels\n  showWeekdayLabels: propTypes.bool,\n  // whether to show weekday labels\n  showOutOfRangeDays: propTypes.bool,\n  // whether to render squares for extra days in week after endDate, and before start date\n  tooltipDataAttrs: propTypes.oneOfType([propTypes.object, propTypes.func]),\n  // data attributes to add to square for setting 3rd party tooltips, e.g. { 'data-toggle': 'tooltip' } for bootstrap tooltips\n  titleForValue: propTypes.func,\n  // function which returns title text for value\n  classForValue: propTypes.func,\n  // function which returns html class for value\n  monthLabels: propTypes.arrayOf(propTypes.string),\n  // An array with 12 strings representing the text from janurary to december\n  weekdayLabels: propTypes.arrayOf(propTypes.string),\n  // An array with 7 strings representing the text from Sun to Sat\n  onClick: propTypes.func,\n  // callback function when a square is clicked\n  onMouseOver: propTypes.func,\n  // callback function when mouse pointer is over a square\n  onMouseLeave: propTypes.func,\n  // callback function when mouse pointer is left a square\n  transformDayElement: propTypes.func // function to further transform the svg element for a single day\n\n};\nCalendarHeatmap.defaultProps = {\n  numDays: null,\n  startDate: dateNDaysAgo(200),\n  endDate: new Date(),\n  gutterSize: 1,\n  horizontal: true,\n  showMonthLabels: true,\n  showWeekdayLabels: false,\n  showOutOfRangeDays: false,\n  tooltipDataAttrs: null,\n  titleForValue: null,\n  classForValue: function classForValue(value) {\n    return value ? 'color-filled' : 'color-empty';\n  },\n  monthLabels: MONTH_LABELS,\n  weekdayLabels: DAY_LABELS,\n  onClick: null,\n  onMouseOver: null,\n  onMouseLeave: null,\n  transformDayElement: null\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CalendarHeatmap);\n//# sourceMappingURL=react-calendar-heatmap.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-calendar-heatmap/dist/react-calendar-heatmap.esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-calendar-heatmap/dist/styles.css":
/*!*************************************************************!*\
  !*** ./node_modules/react-calendar-heatmap/dist/styles.css ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"36fe667a9728\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtY2FsZW5kYXItaGVhdG1hcC9kaXN0L3N0eWxlcy5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxLQUFVLEVBQUUsRUFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW9jaGVja2luZy8uL25vZGVfbW9kdWxlcy9yZWFjdC1jYWxlbmRhci1oZWF0bWFwL2Rpc3Qvc3R5bGVzLmNzcz9iNTU1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiMzZmZTY2N2E5NzI4XCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-calendar-heatmap/dist/styles.css\n");

/***/ })

};
;